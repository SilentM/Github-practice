
#Time Complexity: O(n)
#Space Complexity: O(1)

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        dummyHead = ListNode()
        iterate = dummyHead
        
        while l1 != None and l2 != None:
            if l1.val < l2.val:
                iterate.next = l1
                l1 = l1.next
                iterate = iterate.next
            else:
                iterate.next = l2
                l2 = l2.next
                iterate = iterate.next
            
            
        while (l1 != None or l2 != None):
            if l1 != None:
                iterate.next = l1
                l1 = l1.next
                iterate = iterate.next
            elif l2 != None:
                iterate.next = l2
                l2 = l2.next
                iterate = iterate.next    
        
        return dummyHead.next
            
