//2 pointer solution
// Time: O(n) each element is only visited once at most
// Space: O(1) return array containing 2 values at most
class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int n = numbers.length;
        int lowIndex = 0;
        int highIndex = numbers.length - 1;
        int[] output = new int[2];
        
        while (lowIndex != highIndex && lowIndex < n && highIndex >= 0) {
            if (numbers[lowIndex] + numbers[highIndex] == target) {
                output[0] = lowIndex + 1;
                output[1] = highIndex + 1;
                return output;
            } else if (numbers[lowIndex] + numbers[highIndex] > target) {
                highIndex--;
            } else if (numbers[lowIndex] + numbers[highIndex] < target) {
                lowIndex++;
            }
            }
        return output;
        }
    }
